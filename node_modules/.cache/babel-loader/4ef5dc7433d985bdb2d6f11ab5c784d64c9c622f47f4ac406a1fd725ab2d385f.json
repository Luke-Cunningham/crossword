{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\nvar react_1 = require(\"react\");\nvar prop_types_1 = __importDefault(require(\"prop-types\"));\nvar styled_components_1 = require(\"styled-components\");\nvar context_1 = require(\"./context\");\nvar cellPropTypes = {\n  /** the data specific to this cell */\n  cellData: prop_types_1.default.shape({\n    row: prop_types_1.default.number.isRequired,\n    col: prop_types_1.default.number.isRequired,\n    guess: prop_types_1.default.string,\n    number: prop_types_1.default.string,\n    answer: prop_types_1.default.string\n  }).isRequired,\n  /** whether this cell has focus */\n  focus: prop_types_1.default.bool,\n  /** whether this cell is highlighted */\n  highlight: prop_types_1.default.bool,\n  /** handler called when the cell is clicked */\n  onClick: prop_types_1.default.func\n};\n/**\n * An individual-letter answer cell within the crossword grid.\n *\n * A `Cell` lives inside the SVG for a\n * [`CrosswordGrid`](#/Complex%20layouts/CrosswordGrid), and renders at a\n * position determined by the `row`, `col`, and `cellSize` properties from\n * `cellData` and `renderContext`.\n */\nfunction Cell(_ref) {\n  var cellData = _ref.cellData,\n    onClick = _ref.onClick,\n    focus = _ref.focus,\n    highlight = _ref.highlight;\n  var _ref2 = (0, react_1.useContext)(context_1.CrosswordSizeContext),\n    cellSize = _ref2.cellSize,\n    cellPadding = _ref2.cellPadding,\n    cellInner = _ref2.cellInner,\n    cellHalf = _ref2.cellHalf,\n    fontSize = _ref2.fontSize;\n  var _ref3 = (0, react_1.useContext)(styled_components_1.ThemeContext),\n    cellBackground = _ref3.cellBackground,\n    cellBorder = _ref3.cellBorder,\n    textColor = _ref3.textColor,\n    numberColor = _ref3.numberColor,\n    focusBackground = _ref3.focusBackground,\n    highlightBackground = _ref3.highlightBackground;\n  var handleClick = (0, react_1.useCallback)(function (event) {\n    event.preventDefault();\n    if (onClick) {\n      onClick(cellData);\n    }\n  }, [cellData, onClick]);\n  var row = cellData.row,\n    col = cellData.col,\n    guess = cellData.guess,\n    number = cellData.number,\n    answer = cellData.answer;\n  var x = col * cellSize;\n  var y = row * cellSize;\n  return (0, jsx_runtime_1.jsxs)(\"g\", Object.assign({\n    onClick: handleClick,\n    style: {\n      cursor: 'default',\n      fontSize: \"\".concat(fontSize, \"px\")\n    },\n    className: \"clue-cell\"\n  }, {\n    children: [(0, jsx_runtime_1.jsx)(\"rect\", {\n      x: x + cellPadding,\n      y: y + cellPadding,\n      width: cellInner,\n      height: cellInner,\n      fill: focus ? focusBackground : highlight ? highlightBackground : cellBackground,\n      stroke: cellBorder,\n      strokeWidth: cellSize / 50\n    }), number && (0, jsx_runtime_1.jsx)(\"text\", Object.assign({\n      x: x + cellPadding * 4,\n      y: y + cellPadding * 4,\n      textAnchor: \"start\",\n      dominantBaseline: \"hanging\",\n      style: {\n        fontSize: '50%',\n        fill: numberColor\n      }\n    }, {\n      children: number\n    })), (0, jsx_runtime_1.jsx)(\"text\", Object.assign({\n      x: x + cellHalf,\n      y: y + cellHalf + 1,\n      textAnchor: \"middle\",\n      dominantBaseline: \"middle\",\n      style: {\n        fill: textColor\n      },\n      className: answer === guess ? 'guess-text-correct' : 'guess-text-incorrect'\n    }, {\n      children: guess\n    }))]\n  }));\n}\nexports.default = Cell;\nCell.propTypes = cellPropTypes;\nCell.defaultProps = {\n  focus: false,\n  highlight: false,\n  onClick: null\n};","map":{"version":3,"names":["react_1","require","prop_types_1","__importDefault","styled_components_1","context_1","cellPropTypes","cellData","default","shape","row","number","isRequired","col","guess","string","answer","focus","bool","highlight","onClick","func","Cell","_ref","_ref2","useContext","CrosswordSizeContext","cellSize","cellPadding","cellInner","cellHalf","fontSize","_ref3","ThemeContext","cellBackground","cellBorder","textColor","numberColor","focusBackground","highlightBackground","handleClick","useCallback","event","preventDefault","x","y","jsx_runtime_1","jsxs","Object","assign","style","cursor","concat","className","children","jsx","width","height","fill","stroke","strokeWidth","textAnchor","dominantBaseline","exports","propTypes","defaultProps"],"sources":["/Users/lukecunningham/node_modules/@jaredreisinger/react-crossword/src/Cell.tsx"],"sourcesContent":["import React, { useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\n\nimport { CrosswordSizeContext } from './context';\nimport type { UsedCellData, EnhancedProps } from './types';\n\nconst cellPropTypes = {\n  /** the data specific to this cell */\n  cellData: PropTypes.shape({\n    row: PropTypes.number.isRequired,\n    col: PropTypes.number.isRequired,\n    guess: PropTypes.string, // .isRequired,\n    number: PropTypes.string,\n    answer: PropTypes.string,\n  }).isRequired,\n\n  /** whether this cell has focus */\n  focus: PropTypes.bool,\n\n  /** whether this cell is highlighted */\n  highlight: PropTypes.bool,\n\n  /** handler called when the cell is clicked */\n  onClick: PropTypes.func,\n};\n\nexport type CellProps = EnhancedProps<\n  typeof cellPropTypes,\n  {\n    /** the data specific to this cell */\n    cellData: UsedCellData;\n    /** handler called when the cell is clicked */\n    onClick?: (cellData: UsedCellData) => void;\n  }\n>;\n\n/**\n * An individual-letter answer cell within the crossword grid.\n *\n * A `Cell` lives inside the SVG for a\n * [`CrosswordGrid`](#/Complex%20layouts/CrosswordGrid), and renders at a\n * position determined by the `row`, `col`, and `cellSize` properties from\n * `cellData` and `renderContext`.\n */\nexport default function Cell({\n  cellData,\n  onClick,\n  focus,\n  highlight,\n}: CellProps) {\n  const { cellSize, cellPadding, cellInner, cellHalf, fontSize } =\n    useContext(CrosswordSizeContext);\n  const {\n    // gridBackground,\n    cellBackground,\n    cellBorder,\n    textColor,\n    numberColor,\n    focusBackground,\n    highlightBackground,\n  } = useContext(ThemeContext);\n\n  const handleClick = useCallback<React.MouseEventHandler>(\n    (event) => {\n      event.preventDefault();\n      if (onClick) {\n        onClick(cellData);\n      }\n    },\n    [cellData, onClick]\n  );\n\n  const { row, col, guess, number, answer } = cellData;\n\n  const x = col * cellSize;\n  const y = row * cellSize;\n\n  return (\n    <g\n      onClick={handleClick}\n      style={{ cursor: 'default', fontSize: `${fontSize}px` }}\n      className=\"clue-cell\"\n    >\n      <rect\n        x={x + cellPadding}\n        y={y + cellPadding}\n        width={cellInner}\n        height={cellInner}\n        fill={\n          focus\n            ? focusBackground\n            : highlight\n            ? highlightBackground\n            : cellBackground\n        }\n        stroke={cellBorder}\n        strokeWidth={cellSize / 50}\n      />\n      {number && (\n        <text\n          x={x + cellPadding * 4}\n          y={y + cellPadding * 4}\n          textAnchor=\"start\"\n          dominantBaseline=\"hanging\"\n          style={{ fontSize: '50%', fill: numberColor }}\n        >\n          {number}\n        </text>\n      )}\n      <text\n        x={x + cellHalf}\n        y={y + cellHalf + 1} // +1 for visual alignment?\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n        style={{ fill: textColor }}\n        className={\n          answer === guess ? 'guess-text-correct' : 'guess-text-incorrect'\n        }\n      >\n        {guess}\n      </text>\n    </g>\n  );\n}\n\nCell.propTypes = cellPropTypes;\n\nCell.defaultProps = {\n  focus: false,\n  highlight: false,\n  onClick: null,\n};\n\n// export default Cell;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}